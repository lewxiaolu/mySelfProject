 一、 //以下方法都是原有的数组发生了改变
    var ary = [1,2,32,23,4,3];
    1.push()往数组末尾添加一项内容,参数:添加的内容 返回值:添加完内容后数组的长度
        //var result = ary.push(66);
        //console.log(result);//7
        //console.log(ary);//[1,2,32,23,4,3,66]
     扩展：
          ary[ary.length]='内容'；ary.splice(ary.length,0,'内容');

    2.pop()把数组的最后一项内容删除,没有参数 返回值:删除的内容
        //var result = ary.pop();
        //console.log(result);
        //console.log(ary);
       扩展：
            ary.length--/ary.length-=1;/ary.length=ary.length-1;ary.splice(ary.length-1);ary.splice(ary.length-1,1);

    3.shift()删除数组的第一项内容,没有参数 返回值:删除的内容
        //var result = ary.shift();
        //console.log(result);//1
        //console.log(ary);//[2,32,23,4,3]
       扩展：
            ary.splice(0,1);

    4.unshift()将内容添加到数组的首位置,参数:添加的内容, 返回值:添加完内容后数组的长度
        //var result = ary.unshift(11,22);
        //console.log(result);//8
        //console.log(ary);//[11,22,1,2,32,23,4,3];

     其他方式：原生的往数组的末尾添加一项内容和删除最后一项内容的办法
        ary[ary.length] = 5;//往最后一项的后面添加内容,最后一项的后面的索引就是ary.length
        ary.length--;
        var ary = [1,2,32,23,4,3];

        扩展：ary.splice(0,0,'内容');

    5、splice(n) 从索引n的位置一直删除到最后 ,返回值:删除的内容
          var result = ary.splice(1);
          console.log(result);
          console.log(ary);
    5.1、splice(n,m)从索引n的位置开始一直删除m个 ,返回值:删除的内容
          var result = ary.splice(1,3);
          console.log(result);//[2,32,23]
          console.log(ary);//[1,4,3]
   5.2、splice(n,m,x)从索引n的位置开始一直删除m个,用x(可以是一项也可以是多项)的内容替换删除的内容
         var result = ary.splice(1,3,4,6);
         console.log(result);//[2,32,23]
         console.log(ary);//[1,4,6,4,3]
      eg: ary.splice(1,0,4,6);如果m为0,表示没有删除的内容,x的内容是添加到索引n之前
         var result = ary.splice(1,0,4,6);
         console.log(result);//[]
         console.log(ary)//[1,4,6,2,32,23,4,3]
        var ary = [1,2,32,23,4,3];
   6、reverse() 将数组倒着排列,返回值:倒着排列后的数组
       for(var i=ary.length-1;i>0;i--){
            console.log(ary[i]);
        }

    7、sort() 10以内的数字可以从小到大排列大于10就不行
        var ary = [1,2,5,9,7,2,6];
        var result = ary.sort();
        console.log(result);
        console.log(ary);

        //对10的数字排列我们可以指定规则
        var ary= [2,34,15,12,78,43];

        ary.sort(function(a,b){
            //a表示数组的前一项 b表示数组的后一项
            return a-b;// 从小到大
            //return b-a; //从大到小
        });
        console.log(ary);


二、以下的方法是原数组没有发生改变
    8、slice(n) 从索引n开始截取,一直截取到最后
    8.1、slice(n,m) 从索引n开始截取,一直截取到索引m(包前不包后,包含索引n这一项,不包含索引m这一项)
    //slice的参数可以是负数 (这时的索引 = 负数索引+数组的长度)
    //返回值:截取的新的数组,原数组是不发生改变
        var ary= [2,34,15,12,78,43];
        var result = ary.slice(2);
        console.log(result);//[15,12,78,43]
        console.log(ary);//[2,34,15,12,78,43]

         var result = ary.slice(2,4);
         console.log(result);//[15,12]


       var result = ary.slice(-3,-1);//slice(3,5);
      console.log(result)//[12,78];

      需求：实现找到第n项到第m项(包括n和m)的内容，返回一个新的数组(原有数组不变)
      答案：ary.slice(n-1,m)


    9、join() //按照指定字符拼接成字符串
        var ary= [2,34,15,12,78,43];
        //"2+34+15+12+78+43"
        var result = ary.join("+");
        console.log(result); //"2+34+15+12+78+43"

      //不是数组的方法,eval() 把字符串转化成js语句
         console.log(eval(result));//184

   10、toString() 把数组转化成字符串
       var ary = [1,2,3,4,2,55];
       console.log(ary.toString());//"1,2,3,4,2,55"
   11、concat() 将多个数组拼接成一个数组,返回值:连接后的新数组
        var ary1 = [1,2];
        var ary2 = [2,3];
        var ary3 = [3,4]
        var result = ary1.concat(ary2,ary3);
        console.log(result);//[1, 2, 2, 3,3,4]

    12、indexOf()和lastIndexOf() //ie6-ie8不兼容
        参数n表示数组里的某一项
        indexOf(n)从数组的前面往后找,如果不能找到返回-1,如果能找到,则返回这一项的索引值
       lastIndexOf(n) 从数组的后面往前面找,如果不能找到返回-1,如果能找到,则返回这一项的索引值
       这两个方法就可以判断数组里是否有这一项的存在
            var ary = [1,2,3,4,2,55];
            var result =ary.lastIndexOf(222);
            console.log(result);



    数组克隆
    ary.splice(0); ary.slice()/ary.slice(0); ary.concat();
    ary.slice(n,m)//取出索引n-m的内容放在一个新数组返回；
    ary.concat(ary1);//可以拼接数组






   复习：
   1.给数组末尾添加一项：
   ary.push();ary[ary.length]='内容'；ary.splice(ary.length,0,'内容');
   2.删除数组最后一项
   ary.pop();ary.length--/ary.length-=1;/ary.length=ary.length-1;ary.splice(ary.length-1);ary.splice(ary.length-1,1);
   3.给数组第一项前面添加一项；
   ary.unshift(); ary.splice(0,0,'内容');
   4.把数组第一项删除
   ary.shift(); ary.splice(0,1);
   5.数组克隆
   ary.splice(0); ary.slice()/ary.slice(0); ary.concat();
   ary.slice(n,m)//取出索引n-m的内容放在一个新数组返回；
   ary.concat(ary1);//可以拼接数组
   需求：实现找到第n项到第m项(包括n和m)的内容，返回一个新的数组(原有数组不变)
   答案：ary.slice(n-1,m)
   6.数组拼接成字符串ary.join('拼接符号')； eval(ary.join('+'));
   7.排列和排序
   ary.reverse();
   ary.sort(function(n1,n2){
       return n1-n2;//从小往大排
       return n2-n1;//从大往小排
   })
   8.ary.indexOf(); ary.lastIndexOf();
