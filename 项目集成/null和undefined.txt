null：空对象指针：-->没有具体的值-->一般都是我们手动设置初始值为null；后期的话会给其赋值
undefined：未定义-》连东西都没有--一般都是浏览器的默认值
null 
               1.我们设定一个变量，后期需要使用，那么前期我们默认设置为null；
               2.在js内存是释放中，我们想释放一个堆内存，就让其值变成null即可
                             var obj={name:"珠峰培训"} obj=null;---刚开始开辟的这个堆内存没有被占用，
                             浏览器会在空闲的时候把它销毁
                3.我们通过DOM中提供的属性和方法获取页面中的某一个元素标签，如果当前这个标签不存在，
                   获取的结果是null而不是undefined
                               document。getElementById("div1");----如果页面中没有#div1获取的结果就是null
               4.在正则exec/字符创的match捕获中
                      如果当前要捕获的字符创和正则不匹配的话，捕获到的结果为null
                               var  reg=/\d+?/g;
                                  var str="nisizhuma";
                                   reg.exec(str)----null;
                                   str.match(reg)----null


undefined
                1.在预解释的时候，只声明未定义，默认值是undefind
                               console.log(num);----undefined
                                 var num=13;
                 2.在一个函数中，如果没有写return 或者  return后边什么都没有就返回，默认的返回值就是undefined

                                          function fn0{
                                                

                                             }
                                                 var res=fn();   console.log(res);-----undefined
              
                   3.函数中设置了形参，但是执行的时候如果没有传递参数值，那么形参的默认值就是undefined
                                          function (a,b,c){
                                                        a->10 b->20 c--->undefined  arguments[2]--30  让形参的值变成30
                                                    }
                                                          fn(10,20)
                                        因为在非严格模式下我们的argument和形参存在映射关系，但是在严格模式下（use strict）
                                        不存在映射关系，，改变的话互不影响
  
                4.获取一个对象的属性名对应的属性，如果当前的这个属性名不存在的话，属性默认值是undefined
                                                          var obj={}；console.log(obj.name)----undefined
                                应用检测当前浏览器是否兼容   window.getComputedStyle
